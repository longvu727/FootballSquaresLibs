// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/longvu727/FootballSquaresLibs/services (interfaces: Services)

// Package mockservices is a generated GoMock package.
package mockservices

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	services "github.com/longvu727/FootballSquaresLibs/services"
	util "github.com/longvu727/FootballSquaresLibs/util"
	resources "github.com/longvu727/FootballSquaresLibs/util/resources"
)

// MockServices is a mock of Services interface.
type MockServices struct {
	ctrl     *gomock.Controller
	recorder *MockServicesMockRecorder
}

// MockServicesMockRecorder is the mock recorder for MockServices.
type MockServicesMockRecorder struct {
	mock *MockServices
}

// NewMockServices creates a new mock instance.
func NewMockServices(ctrl *gomock.Controller) *MockServices {
	mock := &MockServices{ctrl: ctrl}
	mock.recorder = &MockServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServices) EXPECT() *MockServicesMockRecorder {
	return m.recorder
}

// Post mocks base method.
func (m *MockServices) Post(arg0 string, arg1 *resources.Resources) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Post", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Post indicates an expected call of Post.
func (mr *MockServicesMockRecorder) Post(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Post", reflect.TypeOf((*MockServices)(nil).Post), arg0, arg1)
}

// RequestCreateFootballSquareGame mocks base method.
func (m *MockServices) RequestCreateFootballSquareGame(arg0 *util.Config) (services.CreateFootballSquareGameResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestCreateFootballSquareGame", arg0)
	ret0, _ := ret[0].(services.CreateFootballSquareGameResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestCreateFootballSquareGame indicates an expected call of RequestCreateFootballSquareGame.
func (mr *MockServicesMockRecorder) RequestCreateFootballSquareGame(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestCreateFootballSquareGame", reflect.TypeOf((*MockServices)(nil).RequestCreateFootballSquareGame), arg0)
}

// RequestGetFootballSquareGameByGameID mocks base method.
func (m *MockServices) RequestGetFootballSquareGameByGameID(arg0 *util.Config) (services.GetFootballSquareGameByGameIDResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestGetFootballSquareGameByGameID", arg0)
	ret0, _ := ret[0].(services.GetFootballSquareGameByGameIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestGetFootballSquareGameByGameID indicates an expected call of RequestGetFootballSquareGameByGameID.
func (mr *MockServicesMockRecorder) RequestGetFootballSquareGameByGameID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestGetFootballSquareGameByGameID", reflect.TypeOf((*MockServices)(nil).RequestGetFootballSquareGameByGameID), arg0)
}

// RequestReserveFootballSquare mocks base method.
func (m *MockServices) RequestReserveFootballSquare(arg0 *util.Config) (services.ReserveFootballSquareResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestReserveFootballSquare", arg0)
	ret0, _ := ret[0].(services.ReserveFootballSquareResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestReserveFootballSquare indicates an expected call of RequestReserveFootballSquare.
func (mr *MockServicesMockRecorder) RequestReserveFootballSquare(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestReserveFootballSquare", reflect.TypeOf((*MockServices)(nil).RequestReserveFootballSquare), arg0)
}
